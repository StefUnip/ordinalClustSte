// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// unsigned_to_signed
int unsigned_to_signed(unsigned x);
RcppExport SEXP _ordinalClust_unsigned_to_signed(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(unsigned_to_signed(x));
    return rcpp_result_gen;
END_RCPP
}
// compare_vec
bool compare_vec(arma::urowvec vec1, arma::rowvec vec2);
RcppExport SEXP _ordinalClust_compare_vec(SEXP vec1SEXP, SEXP vec2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::urowvec >::type vec1(vec1SEXP);
    Rcpp::traits::input_parameter< arma::rowvec >::type vec2(vec2SEXP);
    rcpp_result_gen = Rcpp::wrap(compare_vec(vec1, vec2));
    return rcpp_result_gen;
END_RCPP
}
// allej
arma::umat allej(int j, int m);
RcppExport SEXP _ordinalClust_allej(SEXP jSEXP, SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(allej(j, m));
    return rcpp_result_gen;
END_RCPP
}
// pejp1_yjej
double pejp1_yjej(arma::urowvec ejp1, int yj, arma::urowvec ej, int mu, double p);
RcppExport SEXP _ordinalClust_pejp1_yjej(SEXP ejp1SEXP, SEXP yjSEXP, SEXP ejSEXP, SEXP muSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::urowvec >::type ejp1(ejp1SEXP);
    Rcpp::traits::input_parameter< int >::type yj(yjSEXP);
    Rcpp::traits::input_parameter< arma::urowvec >::type ej(ejSEXP);
    Rcpp::traits::input_parameter< int >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(pejp1_yjej(ejp1, yj, ej, mu, p));
    return rcpp_result_gen;
END_RCPP
}
// pejp1zj1_yjej
double pejp1zj1_yjej(arma::urowvec ejp1, unsigned int yj, arma::urowvec ej, int mu, double p);
RcppExport SEXP _ordinalClust_pejp1zj1_yjej(SEXP ejp1SEXP, SEXP yjSEXP, SEXP ejSEXP, SEXP muSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::urowvec >::type ejp1(ejp1SEXP);
    Rcpp::traits::input_parameter< unsigned int >::type yj(yjSEXP);
    Rcpp::traits::input_parameter< arma::urowvec >::type ej(ejSEXP);
    Rcpp::traits::input_parameter< int >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(pejp1zj1_yjej(ejp1, yj, ej, mu, p));
    return rcpp_result_gen;
END_RCPP
}
// pejp1zj1_ej
double pejp1zj1_ej(arma::urowvec ejp1, arma::urowvec ej, int mu, double p);
RcppExport SEXP _ordinalClust_pejp1zj1_ej(SEXP ejp1SEXP, SEXP ejSEXP, SEXP muSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::urowvec >::type ejp1(ejp1SEXP);
    Rcpp::traits::input_parameter< arma::urowvec >::type ej(ejSEXP);
    Rcpp::traits::input_parameter< int >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(pejp1zj1_ej(ejp1, ej, mu, p));
    return rcpp_result_gen;
END_RCPP
}
// pyj_ej
double pyj_ej(unsigned int yj, arma::urowvec ej);
RcppExport SEXP _ordinalClust_pyj_ej(SEXP yjSEXP, SEXP ejSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< unsigned int >::type yj(yjSEXP);
    Rcpp::traits::input_parameter< arma::urowvec >::type ej(ejSEXP);
    rcpp_result_gen = Rcpp::wrap(pyj_ej(yj, ej));
    return rcpp_result_gen;
END_RCPP
}
// pejp1_ej
double pejp1_ej(arma::urowvec ejp1, arma::urowvec ej, int mu, double p);
RcppExport SEXP _ordinalClust_pejp1_ej(SEXP ejp1SEXP, SEXP ejSEXP, SEXP muSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::urowvec >::type ejp1(ejp1SEXP);
    Rcpp::traits::input_parameter< arma::urowvec >::type ej(ejSEXP);
    Rcpp::traits::input_parameter< int >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(pejp1_ej(ejp1, ej, mu, p));
    return rcpp_result_gen;
END_RCPP
}
// pej
double pej(arma::urowvec& ej, int j, int m, int mu, double p, arma::colvec& z1tozjm1);
RcppExport SEXP _ordinalClust_pej(SEXP ejSEXP, SEXP jSEXP, SEXP mSEXP, SEXP muSEXP, SEXP pSEXP, SEXP z1tozjm1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::urowvec& >::type ej(ejSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< int >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::colvec& >::type z1tozjm1(z1tozjm1SEXP);
    rcpp_result_gen = Rcpp::wrap(pej(ej, j, m, mu, p, z1tozjm1));
    return rcpp_result_gen;
END_RCPP
}
// ordiemCpp
List ordiemCpp(int m, const arma::cube& tab_pej, const arma::colvec& x, const arma::colvec& tabmu0, const arma::colvec& tabp0, double eps, int iter_max);
RcppExport SEXP _ordinalClust_ordiemCpp(SEXP mSEXP, SEXP tab_pejSEXP, SEXP xSEXP, SEXP tabmu0SEXP, SEXP tabp0SEXP, SEXP epsSEXP, SEXP iter_maxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< const arma::cube& >::type tab_pej(tab_pejSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type tabmu0(tabmu0SEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type tabp0(tabp0SEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< int >::type iter_max(iter_maxSEXP);
    rcpp_result_gen = Rcpp::wrap(ordiemCpp(m, tab_pej, x, tabmu0, tabp0, eps, iter_max));
    return rcpp_result_gen;
END_RCPP
}
